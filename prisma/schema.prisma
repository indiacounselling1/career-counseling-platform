generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  student
  counselor
  admin
}

enum BookingStatus {
  pending
  confirmed
  completed
  canceled
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  role      UserRole @default(student)
  password  String?  // Optional for OAuth users
  bookings  Booking[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model EducationalPathway {
  id          String   @id @default(uuid())
  className   String   // e.g., "9th", "10th", "11th", "12th"
  stream      String   // Science, Commerce, Arts, etc.
  course      String   // e.g., B.Tech, MBBS, etc.
  colleges    String[] // Array of college names
  careers     String[] // Array of career options
  eligibility String?
  bookings    Booking[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("educational_pathways")
}

model Booking {
  id            String             @id @default(uuid())
  user          User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  pathway       EducationalPathway @relation(fields: [pathwayId], references: [id], onDelete: Cascade)
  pathwayId     String
  bookedAt      DateTime           @default(now())
  scheduledFor  DateTime
  status        BookingStatus      @default(pending)
  notes         String?
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt

  @@map("bookings")
}
